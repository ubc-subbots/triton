<?xml version='1.0'?>
<sdf version='1.7'>
  <model name='triton_frame'>
    <link name='frame'>

      <!-- pose relaive to STL file origin, was moved to AUV center using Blender -->
      <inertial>
        <mass>17.43388</mass>
        <inertia>
          <ixx> 0.42659179587</ixx>
          <ixy> 0.00091257391</ixy>
          <ixz>-0.00613671114</ixz>
          <iyy> 0.47862692534</iyy>
          <iyz>-0.00224649356</iyz>
          <izz> 0.42575057622</izz>
        </inertia>
        <pose>-0.14826 -0.1687 0.19368 0 0</pose>
      </inertial>

      <!-- Visual Data -->
      <visual name='visual'>
        <pose>0 0 0 0 3.1415 0</pose>
        <geometry>
          <mesh>
            <uri>model://triton_frame/meshes/triton_frame.dae</uri>
            <scale>1 1 1</scale>
          </mesh>
        </geometry>
        <material>
          <lighting>1</lighting>
          <shader type='pixel'/>
        </material>
        <transparency>0</transparency>
        <cast_shadows>1</cast_shadows>
      </visual>

      <gravity>1</gravity>

      <!-- Collision Data-->
      <collision name='collision'>
        <laser_retro>0</laser_retro>
        <max_contacts>10</max_contacts>
        <pose>0 0 0 0 0 0</pose>
        <geometry>
          <mesh>
            <uri>model://triton_frame/meshes/triton_frame.dae</uri>
            <scale>1 1 1</scale>
          </mesh>
        </geometry>
        <!-- Surface Data consists of default value, we should reseach better numbers-->
        <surface>
          <friction>
            <ode>
              <mu>1</mu>
              <mu2>1</mu2>
              <fdir1>0 0 0</fdir1>
              <slip1>0</slip1>
              <slip2>0</slip2>
            </ode>
            <torsional>
              <coefficient>1</coefficient>
              <patch_radius>0</patch_radius>
              <surface_radius>0</surface_radius>
              <use_patch_radius>1</use_patch_radius>
              <ode>
                <slip>0</slip>
              </ode>
            </torsional>
          </friction>
          <bounce>
            <restitution_coefficient>0</restitution_coefficient>
            <threshold>1e+06</threshold>
          </bounce>
          <contact>
            <collide_without_contact>0</collide_without_contact>
            <collide_without_contact_bitmask>1</collide_without_contact_bitmask>
            <collide_bitmask>1</collide_bitmask>
            <ode>
              <soft_cfm>0</soft_cfm>
              <soft_erp>0.2</soft_erp>
              <kp>1e+13</kp>
              <kd>1</kd>
              <max_vel>0.01</max_vel>
              <min_depth>0</min_depth>
            </ode>
            <bullet>
              <split_impulse>1</split_impulse>
              <split_impulse_penetration_threshold>-0.01</split_impulse_penetration_threshold>
              <soft_cfm>0</soft_cfm>
              <soft_erp>0.2</soft_erp>
              <kp>1e+13</kp>
              <kd>1</kd>
            </bullet>
          </contact>
        </surface>
      </collision>
      
      <sensor type="camera" name="front_camera">
        <pose>0.05 -0.57 0 0 0 -1.7 </pose>
        <update_rate>60</update_rate>
        <visualize>true</visualize>
        <camera name="front">
          <horizontal_fov>1.3962634</horizontal_fov>
          <image>
            <width>640</width>
            <height>480</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.02</near>
            <far>300</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.007</stddev>
          </noise>
        </camera>
        <plugin name="front_camera" filename="libgazebo_ros_camera.so">
          <ros>
            <namespace>/triton/drivers</namespace>
          </ros>
        </plugin>
      </sensor>
      <sensor type="camera" name="down_camera">
        <pose>0.05 -0.17 0 0 1.57 0</pose>
        <update_rate>60</update_rate>
        <visualize>true</visualize>
        <camera name="down">
          <horizontal_fov>1.3962634</horizontal_fov>
          <image>
            <width>640</width>
            <height>480</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.02</near>
            <far>300</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.007</stddev>
          </noise>
        </camera>
        <plugin name="down_camera" filename="libgazebo_ros_camera.so">
          <ros>
            <namespace>/triton/drivers</namespace>
          </ros>
        </plugin>
      </sensor>
      <sensor name="imu_sensor" type="imu">
        <always_on>true</always_on>
        <update_rate>100</update_rate>
        <visualize>true</visualize>
        <topic>imu</topic>
        <plugin filename="libgazebo_ros_imu_sensor.so" name="imu">
          <topicName>imu</topicName>
          <bodyName>imu_link</bodyName>
          <updateRateHZ>100.0</updateRateHZ>
          <gaussianNoise>0</gaussianNoise>
          <xyzOffset>0 0 0</xyzOffset>
          <rpyOffset>0 0 0</rpyOffset>
          <frameName>imu_link</frameName>
          <initialOrientationAsReference>false</initialOrientationAsReference>
          <ros>
            <namespace>/triton/drivers</namespace>
          </ros>
        </plugin>
        <pose>0 0 0 0 0 0</pose>
      </sensor>
    </link>

    <static>0</static>
    <allow_auto_disable>1</allow_auto_disable>
  </model>
</sdf>
