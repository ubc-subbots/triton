<?xml version='1.0'?>
<sdf version='1.7'>
  <model name='triton_auv'>
    <!-- 

      Triton AUV components

      Thrusters will follow the following naming convention: 

                        1
                        2
                    6       5
                       4  3
    -->

    <!-- Frame -->
    <include>
      <uri>model://triton_frame</uri>
      <pose>0 0 0 0 0 0</pose>
      <name>frame</name>
    </include>

    <!-- Thrusters -->
    <include>
      <uri>model://triton_thruster</uri>
      <pose>-0.01 0.36 0 0 -1.57075 0</pose>
      <name>thruster1</name>
    </include>

    <include>
      <uri>model://triton_thruster</uri>
      <pose>0 0.22 0.08 0 3.14 0</pose>
      <name>thruster2</name>
    </include>


    <include>
      <uri>model://triton_thruster</uri>
      <pose>0.21 -0.33 -0.0075 0 2.355375 0</pose>
      <name>thruster3</name>
    </include>

    <include>
      <uri>model://triton_thruster</uri>
      <pose>-0.21 -0.33 -0.0075 0 -2.355375 0</pose>
      <name>thruster4</name>
    </include>

    <include>
      <uri>model://triton_thruster</uri>-0.78775
      <!--
      <pose>-0.14965425999999998 0.05152644 0.33146492 3.1415 3.1415 3.1415</pose>
      -->
      <pose>0.325 0.075 0 -1.57 0 0</pose>
      <name>thruster5</name>
    </include>

    <include>
      <uri>model://triton_thruster</uri>
      <!--
      <pose>-0.14965425999999998 -0.38172644 0.33146492 3.1415 3.1415 0</pose>
      -->
      <pose>-0.325 0.075 0 -1.57 0 0</pose>
      <name>thruster6</name>
    </include>


    <!--

      Hydrodynamic model used to calculate restoring forces.

      In the future this description should be specified in each link 
      for a better approximation.

    -->

    <base_link>frame::frame</base_link>
    <neutrally_buoyant>1</neutrally_buoyant>
    <volume>0.0209673336007</volume>
    <center_of_buoyancy>-0.14826	-0.1687	0.2339</center_of_buoyancy>
        <!-- <pose>-0.14826 -0.1687 0.19368 0 -0 0</pose> -->
    <hydrodynamic_model>
        <!-- Useful params for controls simplifications-->
        <scalingBuoyancy>0.93</scalingBuoyancy>
        <scalingDamping>1.0</scalingDamping>
        <scalingAddedMass>0.01</scalingAddedMass>

        <!-- Added mass: see p.28 in Berg2012 -->
        <added_mass>
          5.579266667 0           0           0         0           0
          0           15.09083333 0           0         0           0
          0           0           30.55093333 0         0           0
          0           0           0           7.2955698 0           0
          0           0           0           0         15.51297973 0
          0           0           0           0         0           16.14743877
        </added_mass>
        <!-- Linear damping: see p.31 in Berg2012 -->
        <linear_damping>
            -0.2229119791 -1.105547605 -0.2472084207 -0.02229119791 -0.1105547605 -0.02472084207
        </linear_damping>
        <!-- Non-linear damping: see p.30 in Berg2012 -->
        <quadratic_damping>
            -59.75066625 -71.13459739 -67.099009 -5.975066625 -7.113459739 -6.7099009
        </quadratic_damping>
    </hydrodynamic_model>

    <!--

      Fixed Joints within AUV

    -->

    <joint name='frame_thruster1' type='fixed'>
      <parent>frame::frame</parent>
      <child>thruster1::thruster</child>
      <pose>0 0 0 0 0 0</pose>
      <physics>
        <ode>
          <limit>
            <cfm>0</cfm>
            <erp>0.2</erp>
          </limit>
          <suspension>
            <cfm>0</cfm>
            <erp>0.2</erp>
          </suspension>
        </ode>
      </physics>
    </joint>

    <joint name='frame_thruster2' type='fixed'>
      <parent>frame::frame</parent>
      <child>thruster2::thruster</child>
      <pose>0 0 0 0 0 0</pose>
      <physics>
        <ode>
          <limit>
            <cfm>0</cfm>
            <erp>0.2</erp>
          </limit>
          <suspension>
            <cfm>0</cfm>
            <erp>0.2</erp>
          </suspension>
        </ode>
      </physics>
    </joint>

    <joint name='frame_thruster3' type='fixed'>
      <parent>frame::frame</parent>
      <child>thruster3::thruster</child>
      <pose>0 0 0 0 0 0</pose>
      <physics>
        <ode>
          <limit>
            <cfm>0</cfm>
            <erp>0.2</erp>
          </limit>
          <suspension>
            <cfm>0</cfm>
            <erp>0.2</erp>
          </suspension>
        </ode>
      </physics>
    </joint>

    <joint name='frame_thruster4' type='fixed'>
      <parent>frame::frame</parent>
      <child>thruster4::thruster</child>
      <pose>0 0 0 0 0 0</pose>
      <physics>
        <ode>
          <limit>
            <cfm>0</cfm>
            <erp>0.2</erp>
          </limit>
          <suspension>
            <cfm>0</cfm>
            <erp>0.2</erp>
          </suspension>
        </ode>
      </physics>
    </joint>

    <joint name='frame_thruster5' type='fixed'>
      <parent>frame::frame</parent>
      <child>thruster5::thruster</child>
      <pose>0 0 0 0 0 0</pose>
      <physics>
        <ode>
          <limit>
            <cfm>0</cfm>
            <erp>0.2</erp>
          </limit>
          <suspension>
            <cfm>0</cfm>
            <erp>0.2</erp>
          </suspension>
        </ode>
      </physics>
    </joint>

    <joint name='frame_thruster6' type='fixed'>
      <parent>frame::frame</parent>
      <child>thruster6::thruster</child>
      <pose>0 0 0 0 0 0</pose>
      <physics>
        <ode>
          <limit>
            <cfm>0</cfm>
            <erp>0.2</erp>
          </limit>
          <suspension>
            <cfm>0</cfm>
            <erp>0.2</erp>
          </suspension>
        </ode>
      </physics>
    </joint>

    <!-- 

      Plugins

    -->

    <!-- Thrust Vectors -->
    <plugin name="thruster_array" filename="libthruster_driver_plugin.so">
      <thruster_count>6</thruster_count>
      <ros>
        <namespace>/triton/controls</namespace>
        <remapping>output_forces</remapping>
      </ros>
    </plugin>

    <plugin name="hydrodynamics" filename="libhydrodynamics_plugin.so"></plugin>

    <plugin name="ground_truth_sensor" filename="libground_truth_sensor.so">
      <state_topic>/triton/state</state_topic>
      <update_rate>50</update_rate>
    </plugin>
    <plugin name="p3d_base_controller" filename="libgazebo_ros_p3d.so">
      <always_on>true</always_on>
      <update_rate>50.0</update_rate>
      <body_name>frame::frame</body_name>
      <topic_name>/triton/state</topic_name>
      <gaussian_noise>0.01</gaussian_noise>
      <frame_name>map</frame_name>
      <xyz_offset>0 0 0</xyz_offset>
      <rpy_offset>0 0 0</rpy_offset>
    </plugin>


    <static>0</static>
    <allow_auto_disable>1</allow_auto_disable>

  </model>
</sdf>
